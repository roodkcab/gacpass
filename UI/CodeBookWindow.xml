<Folder>

	<Image content="File" name="Folder">Folder.png</Image>
	<Image content="File" name="New">New.png</Image>
	<Image content="File" name="Edit">Edit.png</Image>
	<Image content="File" name="Delete">Delete.png</Image>

	<Script>
		<Workflow>
			<![CDATA[
			module viewmodel;
			using system::*;

			namespace gacpass
			{
        enum HostType
        {
          Website = 0,
          Server = 1,
          Database = 2,
        }

        func ToString(value : HostType) : string
        {
          switch (value)
          {
            case Website: { return "Website"; }
            case Server: { return "Server"; }
            case Database: { return "Database"; }
          }
          return "";
        }

				interface ICode
				{
				  prop Id : int {not observe}
					prop Title : string {not observe}
					prop Username	: string {not observe}
					prop Password	: string {not observe}
					prop HidePassword : string {const, not observe}
					prop References : observe IReference^[] {const, not observe}

					func Update(code : ICode^) : void;
					func AddReference() : void;
				}

				interface IReference
				{
          prop Id : int {not observe}
					prop CodeId: int {not observe}
					prop Type : HostType {not observe}
					prop Content : string {not observe}

					func Update(reference: IReference^) : void;
        }

				interface ICodeBookViewModel
				{
					prop Codes : observe ICode^[] {const, not observe}
					prop Search : string {}
					prop SelectedCode : ICode^ {}

					func CreateEditCodeViewModel() : IEditCodeViewModel^;

					func AddCode(code : ICode^) : void;
					func UpdateCode(code : ICode^) : void;
					func RemoveCode(code : ICode^) : void;

					func OnItemLeftButtonDoubleClick(arguments : presentation::compositions::GuiItemMouseEventArgs*) : void;

				}
			}
			]]>
		</Workflow>
	</Script>
	<Instance name="CodeBookWindow">
		<Instance ref.Class="gacpass::CodeBookWindow">
			<ref.Parameter Name="ViewModel" Class="gacpass::ICodeBookViewModel" />
			<ref.Parameter Name="MainWindow" Class="presentation::controls::GuiWindow"/>
			<CustomControl ref.Name="self">
				<att.BoundsComposition-set PreferredMinSize="x:700 y:478"/>
				<att.ViewModel-set>
					<att.SelectedCode-bind>listViewCodes.SelectedItem as (gacpass::ICode^)</att.SelectedCode-bind>
					<att.Search-bind>textBoxSearch.Text</att.Search-bind>
				</att.ViewModel-set>
				<ToolstripCommand ref.Name="commandNewCode" Image-uri="res://CodeBookWindowResource/New">
					<ev.Executed-eval>
						<![CDATA[
                $Async{
                  var editVM = ViewModel.CreateEditCodeViewModel();
                  var window = new gacpass::EditCodeWindow*(editVM);
                  window.MoveToScreenCenter();
                  $Await window.ShowModalAsync(self.MainWindow);
                  if (window.Ready)
                  {
                    ViewModel.AddCode(editVM.Code);
                  }
                  delete window;
                }
              ]]>
					</ev.Executed-eval>
				</ToolstripCommand>
				<ToolstripCommand ref.Name="commandEditCode" Image-uri="res://CodeBookWindowResource/Edit">
					<att.Enabled-bind>ViewModel.SelectedCode is not null</att.Enabled-bind>
					<ev.Executed-eval>
						<![CDATA[
                $Async{
                  var editVM = ViewModel.CreateEditCodeViewModel();
									editVM.Code.Update(ViewModel.SelectedCode);
                  var window = new gacpass::EditCodeWindow*(editVM);
                  window.ForEdit = true;
                  window.MoveToScreenCenter();
                  $Await window.ShowModalAsync(self.MainWindow);
                  if (window.Ready)
                  {
										ViewModel.SelectedCode.Update(editVM.Code);
                    ViewModel.UpdateCode(ViewModel.SelectedCode);
                  }
                  delete window;
                }
              ]]>
					</ev.Executed-eval>
				</ToolstripCommand>
				<ToolstripCommand ref.Name="commandRemoveCode" Image-uri="res://CodeBookWindowResource/Delete">
					<att.Enabled-bind>ViewModel.SelectedCode is not null</att.Enabled-bind>
					<ev.Executed-eval>
						<![CDATA[
                $Async{
                  ViewModel.RemoveCode(ViewModel.SelectedCode);
                }
              ]]>
					</ev.Executed-eval>
				</ToolstripCommand>

				<Table CellPadding="5" BorderVisible="false" AlignmentToParent="left:0 top:28 right:0 bottom:0">
					<att.Rows>
						<CellOption>composeType:MinSize</CellOption>
						<CellOption>composeType:Percentage percentage:1.0</CellOption>
					</att.Rows>
					<att.Columns>
						<CellOption>composeType:Percentage percentage:1.0</CellOption>
					</att.Columns>
					<Cell Site="row:0 column:0">
						<ToolstripToolBar>
							<att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
							<ToolstripButton Command-ref="commandNewCode"/>
							<ToolstripButton Command-ref="commandEditCode"/>
							<ToolstripButton Command-ref="commandRemoveCode"/>
						</ToolstripToolBar>
						<SinglelineTextBox ref.Name="textBoxSearch">
							<att.BoundsComposition-set AlignmentToParent="left:100 top:0 right:0 bottom:0" PreferredMinSize="x:100 y:24"/>
						</SinglelineTextBox>
					</Cell>
					<Cell Site="row:1 column:0">
						<BindableListView ref.Name="listViewCodes" View="Detail" HorizontalAlwaysVisible="false" VerticalAlwaysVisible="false" env.ItemType="gacpass::ICode^" ev.ItemLeftButtonDoubleClick-eval="ViewModel.OnItemLeftButtonDoubleClick(arguments);">
							<att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
							<att.ItemSource-bind>
								<![CDATA[
									ViewModel.Codes ?? null
								]]>
							</att.ItemSource-bind>

							<att.Columns>
								<ListViewColumn Text="Title" TextProperty="Title" Size="120"/>
								<ListViewColumn Text="Username" TextProperty="Username" Size="120"/>
								<ListViewColumn Text="Passowrd" TextProperty="HidePassword" Size="120"/>
							</att.Columns>

							<att.DataColumns>
								<_>1</_>
								<_>2</_>
							</att.DataColumns>
						</BindableListView>
					</Cell>
				</Table>
			</CustomControl>
		</Instance>
	</Instance>
</Folder>